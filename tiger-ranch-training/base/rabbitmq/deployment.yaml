apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      micro-svc: rabbitmq
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                echo "Waiting for RabbitMQ to boot"
                until $(rabbitmq-diagnostics is_running 2>/dev/null | grep -q 'is fully booted and running')
                do
                  printf '.'
                  sleep 1
                done
                echo " Done"
                echo "Creating $RABBIT_USER"
                rabbitmqctl add_user "$RABBIT_USER" "$RABBIT_PASSWORD"
                rabbitmqctl set_user_tags "$RABBIT_USER" administrator
                rabbitmqctl set_permissions -p / "$RABBIT_USER" ".*" ".*" ".*"
                rabbitmqctl list_users

        ports:
        - containerPort: 15672
          name: management
        - containerPort: 5672
          name: rabbitmq
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 0.5
            memory: 512Mi
        workingDir: /
        env:
        - name: RABBIT_USER
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_DEFAULT_USER
              name: rabbitmq-creds
        - name: RABBIT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: RABBITMQ_DEFAULT_PASS
              name: rabbitmq-creds
        livenessProbe:
          exec:
            command:
            - /opt/rabbitmq/sbin/rabbitmq-diagnostics
            - -q
            - ping
          timeoutSeconds: 5
          failureThreshold: 2
          periodSeconds: 10
        startupProbe:
          exec:
            command:
            - /opt/rabbitmq/sbin/rabbitmq-diagnostics
            - -q
            - is_running
          timeoutSeconds: 5
          failureThreshold: 5
          periodSeconds: 10
        volumeMounts:
        - name: rabbitmq-config-vol
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: rabbitmq-pv-storage
          mountPath: /usr/share/rabbitmq/data
      volumes:
      - name: rabbitmq-config-vol
        configMap:
          name: rabbitmq-config-cm
      - name: rabbitmq-pv-storage
        persistentVolumeClaim:
          claimName: rabbitmq-pv-storage
      terminationGracePeriodSeconds: 15
